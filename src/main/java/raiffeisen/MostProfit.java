package raiffeisen;

public class MostProfit {

    /**
     * Даны стоимости акций за какой-то период.
     * stockLevels[i] представляет стоимость акций на конец дня i.
     * Нужно вычислить максимально возможную прибыль.
     *
     * Эту задачу мы просто обсудили, от меня не потребовали, чтобы я написал решение.
     * Я нарисовал график стоимостей акций.
     * И стало понятно, что логично всегда покупать подешевле, а продавать подороже.
     *
     * Я так и сказал, что покупать стоит в локальных минимумах, а продавать - в локальных максимумах.
     * Меня спросили, а какие вообще есть подходы к решению такого рода задач.
     * Я не очень понял - промычал.
     * Потом спросили - как называется Ваш подход. Я допер, что меня спрашивают про жадные алгоритмы.
     *
     * Потом спросили, а как доказать корректность жадного алгоритма?
     * Как доказать, что покупать подешевле, а продавать подороже - верная стратегия, которая приведет к оптимальному решению?
     * Я снова протупил. Хотя в голове думал - наверное "от противного".
     *
     * Ну так и вышло. Интеврьюер в обших словах сказал - надо предположить, что есть более оптимальное решение - в какой-то день купить подороже.
     * И что это решение всегда можно улучшить, если бы мы купили подешевле.
     * Ну это и есть от противного. Но точное доказательство он уже не стал спрашивать, так как сам рассказал идею.
     *
     * @param stockLevels
     * @return
     */
    int mostProfit(int[] stockLevels) {

    }
}
